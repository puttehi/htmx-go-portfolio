name: Build and package the project in a Docker image tarball artifact
on:
  workflow_call:
    inputs:
      container-registry:
        description: "Container registry for tagging (<container-registry>/<registry-namespace>/<image-name>:<image-tag>)"
        required: true
        type: string
      registry-namespace:
        description: "Container registry namespace for tagging (<container-registry>/<registry-namespace>/<image-name>:<image-tag>)"
        required: true
        type: string
      image-name:
        description: "Image name for tagging (<container-registry>/<registry-namespace>/<image-name>:<image-tag>)"
        required: true
        type: string
      image-tag:
        description: "Image tag (<container-registry>/<registry-namespace>/<image-name>:<image-tag>)"
        required: true
        type: string
    outputs:
      docker-tar-path:
        description: "Path of the tarball in the output artifact"
        value: ${{ jobs.package-docker.outputs.docker-tar-file }} # Note: Packaging single file removes nesting directory
      docker-artifact-name:
        description: "Output artifact name that contains the Docker tarball"
        value: ${{ jobs.package-docker.outputs.docker-artifact-name }}
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Go 1.22
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: Go setup dependencies
        run: |
          make setup-go
      - name: Go test
        run: |
          make test
  package-docker:
    runs-on: ubuntu-latest
    needs: unit-test
    env:
      DOCKER_REGISTRY: "${{ inputs.container-registry }}/${{ inputs.registry-namespace }}"
      DOCKER_IMAGE: ${{ inputs.image-name }}
      DOCKER_TAG: "${{ inputs.image-tag }}"
    outputs:
      docker-tar-file: ${{ steps.tarball.outputs.docker-tar-file }}
      docker-tar-path: ${{ steps.tarball.outputs.docker-tar-path }}
      docker-artifact-name: docker-image
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker build
        env:
          DOCKER_BUILD_ARGS: >-
            '--label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" --label "org.opencontainers.image.description=Personal portfolio frontend"'
        run: |
          make docker-build \
            DOCKER_REGISTRY=${{ env.DOCKER_REGISTRY }} \
            DOCKER_IMAGE=${{ env.DOCKER_IMAGE }} \
            DOCKER_TAG=${{ env.DOCKER_TAG }} \
            DOCKER_BUILD_ARGS=${{ env.DOCKER_BUILD_ARGS }}
      - name: Tarball
        id: tarball
        env:
          DOCKER_TAR_FILE: "image.tar"
          DOCKER_TAR_PATH: "/tmp/image.tar"
        run: |
          make docker-save \
            DOCKER_REGISTRY="${{ env.DOCKER_REGISTRY }}" \
            DOCKER_IMAGE="${{ env.DOCKER_IMAGE }}" \
            DOCKER_TAG="${{ env.DOCKER_TAG }}" \
            DOCKER_SAVE_ARGS="--output ${{ env.DOCKER_TAR_PATH }}"
          echo "docker-tar-file=${{ env.DOCKER_TAR_FILE }}" >> $GITHUB_OUTPUT
          echo "docker-tar-path=${{ env.DOCKER_TAR_PATH }}" >> $GITHUB_OUTPUT
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image # Has to match output in package-docker.outputs
          path: ${{ steps.tarball.outputs.docker-tar-path }}
